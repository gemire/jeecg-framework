<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">
<beans>
	<bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:init.properties</value>
		</property>
	</bean>
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" dependency-check="none">
		<property name="driverClass">
			<value>${datasource.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${datasource.url}</value>
		</property>
		<property name="user">
			<value>${datasource.username}</value>
		</property>
		<property name="password">
			<value>${datasource.password}</value>
		</property>
		<property name="acquireIncrement">
			<value>${c3p0.acquireIncrement}</value>
		</property>
		<property name="initialPoolSize">
			<value>${c3p0.initialPoolSize}</value>
		</property>
		<property name="minPoolSize">
			<value>${c3p0.minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${c3p0.maxPoolSize}</value>
		</property>
		<property name="maxIdleTime">
			<value>${c3p0.maxIdleTime}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${c3p0.idleConnectionTestPeriod}</value>
		</property>
		<property name="maxStatements">
			<value>${c3p0.maxStatements}</value>
		</property>
		<property name="numHelperThreads">
			<value>${c3p0.numHelperThreads}</value>
		</property>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="mappingResources">
			<list>
				<value>com/media/entities/Dictionary.hbm.xml</value>
				<value>com/media/entities/Dictionaryitem.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
        </prop>
				<prop key="hibernate.show_sql">
					${hibernate.show_sql}
        </prop>
				<prop key="hibernate.jdbc.fetch_size">
					${hibernate.jdbc.fetch_size}
        </prop>
				<prop key="hibernate.jdbc.batch_size">
					${hibernate.jdbc.batch_size}
        </prop>
			</props>
		</property>
	</bean>
	<bean id="myTransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
	<bean id="dictionaryDAO" class="com.media.dao.hibernate.DictionaryHibernateDao">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
	<bean id="txProxyTemplate" abstract="true"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref bean="myTransactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="create*">
					PROPAGATION_REQUIRED,-com.media.exception.MediaException
        </prop>
				<prop key="save*">
					PROPAGATION_REQUIRED,-com.media.exception.MediaException
        </prop>
				<prop key="remove*">
					PROPAGATION_REQUIRED,-com.media.exception.MediaException
        </prop>
				<prop key="update*">
					PROPAGATION_REQUIRED,-com.media.exception.MediaException
        </prop>
				<prop key="del*">
					PROPAGATION_REQUIRED,-com.media.exception.MediaException
        </prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	<bean id="baseCache" class="com.media.util.OsCacheUtil">
		<constructor-arg>
			<value>${cache.config}</value>
		</constructor-arg>
	</bean>
	<bean id="sysConfigTarget" class="com.media.service.SysConfigService"
		autowire="default">
		<property name="dictionaryDao">
			<ref local="dictionaryDAO" />
		</property>
	</bean>
	<bean id="sysConfigService" parent="txProxyTemplate" autowire="default"
		lazy-init="default">
		<property name="target">
			<ref local="sysConfigTarget" />
		</property>
	</bean>
</beans>
	<!--
		<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames"> <list>
		<value>com.media.web.action.BaseAction</value> </list> </property>
		</bean> <bean id="SysConfigReresh"
		class="com.media.service.task.UserLevelRefresh"> <property
		name="SysConfigService"> <ref local="SysConfigService" /> </property>
		</bean> <bean id="SysConfigRefreshTimerTask"
		class="org.springframework.scheduling.timer.ScheduledTimerTask">
		<property name="delay"> <value>10000</value> </property> <property
		name="period"> <value>120000</value> </property> <property
		name="timerTask"> <ref local="SysConfigReresh" /> </property> </bean>
		<bean id="RefeshSysConfigService" parent="txProxyTemplate"> <property
		name="target"> <ref bean="SysConfigRefreshTimerTask" /> </property>
		</bean> <bean name="RefeshSysConfigJob"
		class="org.springframework.scheduling.quartz.JobDetailBean"> <property
		name="jobClass"> <value> com.media.service.job.RefeshSysConfigJob
		</value> </property> <property name="jobDataAsMap"> <map> <entry
		key="RefeshSysConfigService"> <ref local="RefeshSysConfigService" />
		</entry> </map> </property> </bean> <bean
		id="RefeshSysConfigJobCronTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail"> <ref bean="RefeshSysConfigJob" />
		</property> <property name="cronExpression"> <value>0 0 1 * *
		?</value> </property> </bean> <bean
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers"> <list> <ref
		local="RefeshSysConfigJobCronTrigger" /> </list> </property> </bean>
	-->
